{"version":3,"sources":["scripts/main.js"],"names":["inputs","document","querySelectorAll","input","label","createElement","setAttribute","id","capitalizeFirstLetter","name","before","innerText","string","modifiedString","letter","toUpperCase","charAt","slice"],"mappings":";AAAA,aA2BC,SAAA,EAAA,GAAA,GAAA,oBAAA,QAAA,MAAA,EAAA,OAAA,UAAA,CAAA,GAAA,MAAA,QAAA,KAAA,EAAA,EAAA,IAAA,CAAA,IAAA,EAAA,EAAA,EAAA,aAAA,MAAA,CAAA,EAAA,EAAA,EAAA,WAAA,OAAA,GAAA,EAAA,OAAA,CAAA,MAAA,GAAA,CAAA,MAAA,EAAA,MAAA,EAAA,OAAA,EAAA,SAAA,GAAA,MAAA,GAAA,EAAA,GAAA,MAAA,IAAA,UAAA,yIAAA,IAAA,EAAA,EAAA,GAAA,EAAA,GAAA,EAAA,MAAA,CAAA,EAAA,WAAA,EAAA,EAAA,OAAA,aAAA,EAAA,WAAA,IAAA,EAAA,EAAA,OAAA,OAAA,EAAA,EAAA,KAAA,GAAA,EAAA,SAAA,GAAA,GAAA,EAAA,EAAA,GAAA,EAAA,WAAA,IAAA,GAAA,MAAA,EAAA,QAAA,EAAA,SAAA,QAAA,GAAA,EAAA,MAAA,KAAA,SAAA,EAAA,EAAA,GAAA,GAAA,EAAA,CAAA,GAAA,iBAAA,EAAA,OAAA,EAAA,EAAA,GAAA,IAAA,EAAA,OAAA,UAAA,SAAA,KAAA,GAAA,MAAA,GAAA,GAAA,MAAA,WAAA,GAAA,EAAA,cAAA,EAAA,EAAA,YAAA,MAAA,QAAA,GAAA,QAAA,EAAA,MAAA,KAAA,GAAA,cAAA,GAAA,2CAAA,KAAA,GAAA,EAAA,EAAA,QAAA,GAAA,SAAA,EAAA,EAAA,IAAA,MAAA,GAAA,EAAA,EAAA,UAAA,EAAA,EAAA,QAAA,IAAA,IAAA,EAAA,EAAA,EAAA,IAAA,MAAA,GAAA,EAAA,EAAA,IAAA,EAAA,GAAA,EAAA,GAAA,OAAA,EAzBD,IAyBC,EAzBKA,EAASC,SAASC,iBAAiB,SAErBF,EAAAA,EAAAA,GAuBnB,IAvB2B,IAAA,EAAA,MAAA,EAAA,EAAA,KAAA,MAAA,CAAjBG,IAAAA,EAAiB,EAAA,MACpBC,EAAQH,SAASI,cAAc,SAErCD,EAAME,aAAa,MAAOH,EAAMI,IAChCH,EAAME,aAAa,QAAS,eAE5BH,EAAMG,aAAa,cAAeE,EAAsBL,EAAMM,OAC9DN,EAAMO,OAAON,GAEbA,EAAMO,UAAYH,EAAsBL,EAAMM,OAc/C,MAAA,GAAA,EAAA,EAAA,GAAA,QAAA,EAAA,IAXD,SAASD,EAAsBI,GACzBC,IADiC,EACjCA,EAAiB,GAEAD,EAAAA,EAAAA,GAHgB,IAGR,IAAA,EAAA,MAAA,EAAA,EAAA,KAAA,MAAA,CAAlBE,IAAAA,EAAkB,EAAA,MACvBA,IAAWA,EAAOC,gBACpBF,GAAkB,KAEpBA,GAAkBC,GAPiB,MAAA,GAAA,EAAA,EAAA,GAAA,QAAA,EAAA,IAU9BD,OAAAA,EAAeG,OAAO,GAAGD,cAAgBF,EAAeI,MAAM","file":"main.0307db29.js","sourceRoot":"..\\src","sourcesContent":["'use strict';\n\nconst inputs = document.querySelectorAll('input');\n\nfor (const input of inputs) {\n  const label = document.createElement('label');\n\n  label.setAttribute('for', input.id);\n  label.setAttribute('class', 'field-label');\n\n  input.setAttribute('placeholder', capitalizeFirstLetter(input.name));\n  input.before(label);\n\n  label.innerText = capitalizeFirstLetter(input.name);\n}\n\nfunction capitalizeFirstLetter(string) {\n  let modifiedString = '';\n\n  for (const letter of string) {\n    if (letter === letter.toUpperCase()) {\n      modifiedString += ' ';\n    }\n    modifiedString += letter;\n  }\n\n  return modifiedString.charAt(0).toUpperCase() + modifiedString.slice(1);\n}\n"]}